[{"path":"/2/","content":""},{"title":"post","path":"/51727/","content":""},{"title":"主页","path":"/web/","content":".font-local-title { font-family: 'Times New Roman', Times, serif; font-size: 25px !important;text-align: center;font-weight: bold; } 规划 讨论 ChatGPT Claude Kimi Deepseek GitHub Google Google Scholar NPUHEART IB-FEniCS sci-hub Paraview FEniCS Cloudflare SIMULA pulse 期刊投稿 SISC JCP AMC CMA POF CMAME IJNMB 服务器 IP 端口 CPU 账号 10.68.86.76 8822 npuheart 22 9654 fenics kokkos 88 8383 fenics kokkos git 9010 npuheart9 10.69.46.201 8822 caili 22 6248 fenics 生活娱乐 哔哩哔哩 HD time 网站建设 云服务开源代码其他 Cloudflare 又拍云https://www.upyun.com vercel netlifyartalkhttps://github.com/NginxProxyManager/nginx-proxy-manager walinediscourse https://developer.mozilla.org/zh-CN/ Next 主题stellar 主题hexohugojekyll 装机工具 .container1 { width: 150px; /* 固定宽度 */ height: 150px; /* 增加高度以容纳标题 */ background-color: #f6f6f6; /* 淡灰色背景 */ display: flex; flex-direction: column; /* 子项从上到下排列 */ justify-content: center; /* 水平居中 */ align-items: center; /* 垂直居中 */ border-radius: 15px; /* 圆角 */ box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* 可选阴影效果 */ } .container1:hover { transform: translateY(-1px); /* 上浮效果 */ box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); /* 增强阴影效果 */ } .container1 img { max-width: 80%; /* 图片大小适应容器 */ max-height: 70%; /* 图片大小适应容器 */ object-fit: contain; /* 保持图片比例 */ } .wrapper1 { display: flex; /* 使用 flex 布局 */ gap: 20px; /* 子项间距 */ justify-content: center; align-items: center; /* 垂直方向居中 */ flex-wrap: wrap; /* 允许换行 */ } .container1 .title { margin-top: 10px; /* 标题与图片之间的间距 */ font-size: 14px; /* 标题字体大小 */ color: #333; /* 标题颜色 */ text-align: center; /* 居中对齐 */ } Scoop夜煞云自留地 AI工具 Claude Gemini Cursor - The AI Code Editor Devin GitHub Copilot · Your AI pair programmer 效率 N8N milanote obsidian Zotero PicGo 哔哩哔哩 蜻蜓FM 豆瓣 网易云音乐 音乐解锁 网络SMS-Activate Jørgen S. DokkenJørgen S. Dokken 需要后台的服务： Nginx umanmi Wechat Images WebDAV gitlfs Artalk Memos Hugo Next Stellar Obsidian Discourse | Obsidian (deprecated) | https://wiki.pengfeima.cn(准备弃用) | https://fenicstutorial.pengfeima.cn(fenics的中文翻译，准备弃用) | | | | 高老师发的三本力学教材 Nonlinear ElasticityNonlinear Elasticityhttps://wangxuan.mapengfei.cn/1 5M Elasticity, School of Mathematics and Statistics University of Glasgow, Glasgow 2014-20155M Elasticityhttps://wangxuan.mapengfei.cn/2 4H Continuum Mechanics and Elasticity, Prof. Nick Hill, LECTURE NOTES, School of Mathematics and Statistics University of Glasgow 2018 – 20194H Continuum Mechanics and Elasticityhttps://wangxuan.mapengfei.cn/3 其他力学教材奥克兰大学力学讲义https://pkel015.connect.amazon.auckland.ac.nz/SolidMechanicsBooks/index.html LinuxMPI Tutorialhttps://mpitutorial.com/ The Linux Command Line 一书的中文翻译https://billie66.github.io/TLCL/book/index.html sci-hub 官方sci-hubhttps://sci-hub.sesci-hubhttps://sci-hub.stsci-hubhttps://sci-hub.ru非官方sci-hubhttps://sci-hub.wf MacOS 软件下载macapphttps://macapp.org.cn 心肌灌注百科poroelasticity wikihttps://github.com/shaoyaoqian/phd-thesis-new/wiki 画图工具 绘制流程图drawiohttps://www.drawio.com 计算心脏力学 设置心脏瓣膜和心脏外周参数，给出血流压强、流量，心电图。 CircAdapt模拟器https://www.circadapt.org FEniCS 流固耦合求解，ALE方法。 turtleFSIhttps://github.com/KVSlab/turtleFSI hacking C++https://hackingcpp.com/cpp/cheat_sheets.html C++ 编译器对 C++ 标准的支持 cppreferencehttps://en.cppreference.com/w/cpp/compiler_support FEniCS 论坛https://fenicsproject.discourse.group FEniCS 官网 旧版 FEniCS 源码 软件的自动化集成与测试GitHub Actions 多孔弹性力学学术博客Alessandro Mastrofini 博客https://alessandromastrofini.it/2022/02/01/multiphysic-computational-models/ https://math.nyu.edu/~peskin/https://math.nyu.edu/~peskin/ PT 站HDTIMEhttps://www.hdtime.org torrentleechhttps://www.torrentleech.org 其他bibtex文献解析器https://github.com/sciunto-org/python-bibtexparser 有限元组装器https://github.com/kinnala/scikit-fem title content Z-Libraryhttps://z-library.se/ Z-Libraryhttps://zlibrary-hk.se/ 神经血管单元模型 https://github.com/alexdiem/nvu 物质点方法的参考： https://github.com/penn-graphics-research/claymore https://github.com/penn-graphics-research/HOT https://github.com/ruizbaier/PoroelasticModelForAcuteMyocarditis 早期多孔弹性模型的开源代码参考，膨胀模量 alpha 为常数双心室坐标系统 GPU实现参考：https://github.com/pkestene/euler_kokkos 用MPI+Kokkos实现的可压缩流体力学和磁流体力学（二阶Godunov） Adobe 全家桶下载"},{"title":"安装IBAMR-0.5.1","path":"/29277/","content":"安装 IBAMR 0.5.1 .font-local-title { font-family: 'Times New Roman', Times, serif; font-size: 25px !important;text-align: center;font-weight: bold; } 安装命令# ibamr 及其依赖将安装到 $HOME/ibamr 文件夹下，需要先删除 $HOME/ibamr 文件夹，确保安装过程不受影响。rm -rf $HOME/ibamr# .IBAMR.BAK 中的备份文件拷贝到 $HOME/ibamr 目录下。cp -r $HOME/.IBAMR.BAK $HOME/ibamr# 第一步：安装boostcd ~/ibamrtar xfz boost_1_64_0.tar.gzmv boost_1_64_0 boostexport BOOST_ROOT=$HOME/ibamr/boostmkdir -p $BOOST_ROOT/includeln -s $BOOST_ROOT/boost $BOOST_ROOT/includerm boost_1_64_0.tar.gz# 安装HDF5cd ~/ibamrmkdir -p hdf5tar xfz hdf5-1.8.12.tar.gzcd hdf5-1.8.12./configure \\ CC=gcc \\ CXX=g++ \\ FC=gfortran \\ F77=gfortran \\ --enable-production \\ --disable-debug \\ --prefix=$HOME/ibamr/hdf5 make -j36make installcd $HOME/ibamrrm hdf5-1.8.12.tar.gzrm -r hdf5-1.8.12# 安装silocd $HOME/ibamrtar xfz silo-4.10.tar.gzcd silo-4.10./configure \\ CC=gcc \\ CXX=g++ \\ FC=gfortran \\ F77=gfortran \\ --prefix=$HOME/ibamr/silo \\ --disable-silexmake -j72make installcd $HOME/ibamrrm -r silo-4.10rm silo-4.10.tar.gz# 安装petsccd ~/ibamrexport PETSC_DIR=$HOME/ibamr/petscexport PETSC_ARCH=linux-opttar xfz petsc-v3.10.5.tar.gzmv petsc-v3.10.5 petsctar -xf externalpackages.tarmkdir -p $PETSC_DIR/$PETSC_ARCHmv externalpackages $PETSC_DIR/$PETSC_ARCHcd $PETSC_DIR./configure \\ --CC=mpicc \\ --CXX=mpicxx \\ --FC=mpif90 \\ --COPTFLAGS=-O3 \\ --CXXOPTFLAGS=-O3 \\ --FOPTFLAGS=-O3 \\ --PETSC_ARCH=$PETSC_ARCH \\ --with-debugging=0 \\ --download-hypre=1 \\ --download-fblaslapack=1 \\ --with-x=0make -j36make test# 安装samraicd ~/ibamrtar xfz SAMRAI-v2.4.4.tar.gzmv SAMRAI samraicd samraicp ../ibamr-samrai-fixes.patch ibamr-samrai-fixes.patchpatch -p1 ibamr-samrai-fixes.patch# 配置安装./configure \\ CFLAGS=-O3 \\ CXXFLAGS=-O3 \\ FFLAGS=-O3 \\ --prefix=$HOME/ibamr/samrai/linux-g++-opt \\ --with-CC=mpicc \\ --with-CXX=mpicxx \\ --with-F77=mpifort \\ --with-hdf5=$HOME/ibamr/hdf5 \\ --without-hypre \\ --without-silo \\ --without-blaslapack \\ --without-cubes \\ --without-eleven \\ --without-kinsol \\ --without-petsc \\ --without-sundials \\ --without-x \\ --with-doxygen \\ --with-dot \\ --disable-debug \\ --enable-opt \\ --enable-implicit-template-instantiation \\ --disable-deprecatedmake -j36make installcd ~/ibamrrm SAMRAI-v2.4.4.tar.gz# 注意：最新版的IBAMR需要libmesh1.1.0以上版本cd $HOME/ibamr/tar xfz libmesh-1.2.1.tar.gzmv libmesh-1.2.1 libmeshcd ~/ibamr/libmeshmkdir -p objs-optcd objs-opt../configure \\ --prefix=$HOME/ibamr/libmesh/1.2.1-opt \\ --with-methods=opt \\ PETSC_DIR=$HOME/ibamr/petsc \\ PETSC_ARCH=linux-opt \\ CC=mpicc \\ CXX=mpicxx \\ FC=mpif90 \\ F77=mpif90 \\ --enable-exodus \\ --enable-triangle \\ --disable-boost \\ --disable-openmp \\ --disable-perflog \\ --disable-pthreads \\ --disable-strict-lgpl \\ --disable-glibcxx-debuggingmake -j36make installcd $HOME/ibamr/rm libmesh-1.2.1.tar.gz# 安装ibamrcd ~/ibamrtar xfz IBAMR-0.5.1.tar.gzmv IBAMR-0.5.1 IBAMRcd IBAMRmkdir -p ibamr-objs-optcd ibamr-objs-opt../configure \\ CC=mpicc \\ CXX=mpicxx \\ F77=mpif90 \\ FC=mpif90 \\ MPICC=mpicc \\ MPICXX=mpicxx \\ CFLAGS=-O3 -Wall \\ CXXFLAGS=-O3 -Wall -std=c++11 \\ FFLAGS=-O3 -Wall \\ FCFLAGS=-O3 -Wall \\ CPPFLAGS=-DOMPI_SKIP_MPICXX \\ --with-hypre=$PETSC_DIR/$PETSC_ARCH \\ --with-samrai=$HOME/ibamr/samrai \\ --with-hdf5=$HOME/ibamr/hdf5 \\ --with-silo=$HOME/ibamr/silo \\ --with-boost=$HOME/ibamr/boost \\ --enable-libmesh \\ --with-libmesh=$HOME/ibamr/libmesh/1.2.1-opt \\ --with-libmesh-method=optmake lib -j36echo export PETSC_DIR=$HOME/ibamr/petsc $HOME/.bashrcecho export PETSC_ARCH=linux-opt $HOME/.bashrcecho export IBAMR_DIR=$HOME/ibamr/IBAMR/ibamr-objs-opt $HOME/.bashrcecho export BOOST_ROOT=$HOME/ibamr/boost $HOME/.bashrcsource $HOME/.bashrc"},{"title":"组会名单","path":"/64204/","content":".font-local-title { font-family: 'Times New Roman', Times, serif; font-size: 25px !important;text-align: center;font-weight: bold; } 组会名单 为了确保每个人都能公平地参与每周的组会汇报，汇报的顺序将采用以下方式生成：以当年已度过的周数为种子，使用线性同余法生成随机数，然后将名单进行重新排列。名单会每周自动更新，生成名单的代码放在页面末尾。 代码script function seededRandom(seed) const a = 1664525; // 乘数 const c = 1013904223; // 增量 const m = 4294967296; // 模数 (2^32) seed = (a * seed + c) % m; return seed; function shuffleArray(array) const today = new Date(); // 创建一个表示当前日期和时间的 Date 对象 // 计算今天是一年中的第几周 let seed = Math.ceil((today - new Date(today.getFullYear(), 0, 1)) / (7 * 24 * 60 * 60 * 1000))+4; for (let i = 0; i names.length; i++) seed = seededRandom(seed); const j = Math.floor(seed/4294967296 * (i)); // 生成一个随机索引 // 交换 array[i] 和 array[j] 的值 [array[i], array[j]] = [array[j], array[i]]; const names = [ 刘友琼, 马鹏飞, 安然, 王泰, 陈奇星, 薛静, 顾钦天, 李俊逸, 朱长江, 王璇, 魏艳红, 郭俊辉, 施丽红, 张秉正 ]; shuffleArray(names) for (let i = 1; i = names.length; i++) const today = new Date(); // 创建一个表示当前日期和时间的 Date 对象 const weekNumber = Math.ceil((today - new Date(today.getFullYear(), 0, 1)) / (7 * 24 * 60 * 60 * 1000)); // 计算今天是一年中的第几周 const randomName = names[i-1]; document.getElementById(`weeknumber`).textContent = `2024年第$weekNumber周组会汇报顺序`; document.getElementById(`number$i`).textContent = `$i: $randomName`; /script function seededRandom(seed) { const a = 1664525; // 乘数 const c = 1013904223; // 增量 const m = 4294967296; // 模数 (2^32) seed = (a * seed + c) % m; return seed; } function shuffleArray(array) { const today = new Date(); // 创建一个表示当前日期和时间的 Date 对象 // 计算今天是一年中的第几周 let seed = Math.ceil((today - new Date(today.getFullYear(), 0, 1)) / (7 * 24 * 60 * 60 * 1000))+4; for (let i = 0; i < names.length; i++) { seed = seededRandom(seed); const j = Math.floor(seed/4294967296 * (i)); // 生成一个随机索引 // 交换 array[i] 和 array[j] 的值 [array[i], array[j]] = [array[j], array[i]]; } } const names = [ \"刘友琼\", \"马鹏飞\", \"安然\", \"王泰\", \"陈奇星\", \"薛静\", \"顾钦天\", \"李俊逸\", \"朱长江\", \"王璇\", \"魏艳红\", \"郭俊辉\", \"施丽红\", \"张秉正\" ]; shuffleArray(names) for (let i = 1; i"}]